<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="pos.dao.SizeMapper" >
  <resultMap id="BaseResultMap" type="pos.model.Size" >
    <id column="SizeID" property="sizeid" jdbcType="VARCHAR" />
    <result column="No" property="no" jdbcType="VARCHAR" />
    <result column="Size" property="size" jdbcType="VARCHAR" />
    <result column="OtherFlag" property="otherflag" jdbcType="BIT" />
    <result column="UseFlag" property="useflag" jdbcType="BIT" />
    <result column="Memo" property="memo" jdbcType="VARCHAR" />
    <result column="UK" property="uk" jdbcType="VARCHAR" />
    <result column="USA" property="usa" jdbcType="VARCHAR" />
    <result column="Size_EShop" property="sizeEshop" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    SizeID, No, Size, OtherFlag, UseFlag, Memo, UK, USA, Size_EShop
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="pos.model.SizeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from Size
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from Size
    where SizeID = #{sizeid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from Size
    where SizeID = #{sizeid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="pos.model.Size" >
    insert into Size (SizeID, No, Size, 
      OtherFlag, UseFlag, Memo, UK, 
      USA, Size_EShop)
    values (#{sizeid,jdbcType=VARCHAR}, #{no,jdbcType=VARCHAR}, #{size,jdbcType=VARCHAR}, 
      #{otherflag,jdbcType=BIT}, #{useflag,jdbcType=BIT}, #{memo,jdbcType=VARCHAR}, #{uk,jdbcType=VARCHAR}, 
      #{usa,jdbcType=VARCHAR}, #{sizeEshop,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="pos.model.Size" >
    insert into Size
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="sizeid != null" >
        SizeID,
      </if>
      <if test="no != null" >
        No,
      </if>
      <if test="size != null" >
        Size,
      </if>
      <if test="otherflag != null" >
        OtherFlag,
      </if>
      <if test="useflag != null" >
        UseFlag,
      </if>
      <if test="memo != null" >
        Memo,
      </if>
      <if test="uk != null" >
        UK,
      </if>
      <if test="usa != null" >
        USA,
      </if>
      <if test="sizeEshop != null" >
        Size_EShop,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="sizeid != null" >
        #{sizeid,jdbcType=VARCHAR},
      </if>
      <if test="no != null" >
        #{no,jdbcType=VARCHAR},
      </if>
      <if test="size != null" >
        #{size,jdbcType=VARCHAR},
      </if>
      <if test="otherflag != null" >
        #{otherflag,jdbcType=BIT},
      </if>
      <if test="useflag != null" >
        #{useflag,jdbcType=BIT},
      </if>
      <if test="memo != null" >
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="uk != null" >
        #{uk,jdbcType=VARCHAR},
      </if>
      <if test="usa != null" >
        #{usa,jdbcType=VARCHAR},
      </if>
      <if test="sizeEshop != null" >
        #{sizeEshop,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="pos.model.SizeExample" resultType="java.lang.Integer" >
    select count(*) from Size
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="pos.model.Size" >
    update Size
    <set >
      <if test="no != null" >
        No = #{no,jdbcType=VARCHAR},
      </if>
      <if test="size != null" >
        Size = #{size,jdbcType=VARCHAR},
      </if>
      <if test="otherflag != null" >
        OtherFlag = #{otherflag,jdbcType=BIT},
      </if>
      <if test="useflag != null" >
        UseFlag = #{useflag,jdbcType=BIT},
      </if>
      <if test="memo != null" >
        Memo = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="uk != null" >
        UK = #{uk,jdbcType=VARCHAR},
      </if>
      <if test="usa != null" >
        USA = #{usa,jdbcType=VARCHAR},
      </if>
      <if test="sizeEshop != null" >
        Size_EShop = #{sizeEshop,jdbcType=VARCHAR},
      </if>
    </set>
    where SizeID = #{sizeid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="pos.model.Size" >
    update Size
    set No = #{no,jdbcType=VARCHAR},
      Size = #{size,jdbcType=VARCHAR},
      OtherFlag = #{otherflag,jdbcType=BIT},
      UseFlag = #{useflag,jdbcType=BIT},
      Memo = #{memo,jdbcType=VARCHAR},
      UK = #{uk,jdbcType=VARCHAR},
      USA = #{usa,jdbcType=VARCHAR},
      Size_EShop = #{sizeEshop,jdbcType=VARCHAR}
    where SizeID = #{sizeid,jdbcType=VARCHAR}
  </update>
</mapper>
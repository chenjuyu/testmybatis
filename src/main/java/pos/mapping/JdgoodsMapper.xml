<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="pos.dao.JdgoodsMapper" >
  <resultMap id="BaseResultMap" type="pos.model.Jdgoods" >
    <id column="GoodsNo" property="goodsno" jdbcType="VARCHAR" />
    <result column="GoodsID" property="goodsid" jdbcType="VARCHAR" />
    <result column="Code" property="code" jdbcType="VARCHAR" />
    <result column="Name" property="name" jdbcType="VARCHAR" />
    <result column="barcodes" property="barcodes" jdbcType="VARCHAR" />
    <result column="deptNo" property="deptno" jdbcType="VARCHAR" />
    <result column="goodsName" property="goodsname" jdbcType="VARCHAR" />
    <result column="safeDays" property="safedays" jdbcType="INTEGER" />
    <result column="thirdCategoryNo" property="thirdcategoryno" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    GoodsNo, GoodsID, Code, Name, barcodes, deptNo, goodsName, safeDays, thirdCategoryNo
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="pos.model.JdgoodsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from jdGoods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from jdGoods
    where GoodsNo = #{goodsno,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from jdGoods
    where GoodsNo = #{goodsno,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="pos.model.Jdgoods" >
    insert into jdGoods (GoodsNo, GoodsID, Code, 
      Name, barcodes, deptNo, 
      goodsName, safeDays, thirdCategoryNo
      )
    values (#{goodsno,jdbcType=VARCHAR}, #{goodsid,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{barcodes,jdbcType=VARCHAR}, #{deptno,jdbcType=VARCHAR}, 
      #{goodsname,jdbcType=VARCHAR}, #{safedays,jdbcType=INTEGER}, #{thirdcategoryno,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="pos.model.Jdgoods" >
    insert into jdGoods
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="goodsno != null" >
        GoodsNo,
      </if>
      <if test="goodsid != null" >
        GoodsID,
      </if>
      <if test="code != null" >
        Code,
      </if>
      <if test="name != null" >
        Name,
      </if>
      <if test="barcodes != null" >
        barcodes,
      </if>
      <if test="deptno != null" >
        deptNo,
      </if>
      <if test="goodsname != null" >
        goodsName,
      </if>
      <if test="safedays != null" >
        safeDays,
      </if>
      <if test="thirdcategoryno != null" >
        thirdCategoryNo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="goodsno != null" >
        #{goodsno,jdbcType=VARCHAR},
      </if>
      <if test="goodsid != null" >
        #{goodsid,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="barcodes != null" >
        #{barcodes,jdbcType=VARCHAR},
      </if>
      <if test="deptno != null" >
        #{deptno,jdbcType=VARCHAR},
      </if>
      <if test="goodsname != null" >
        #{goodsname,jdbcType=VARCHAR},
      </if>
      <if test="safedays != null" >
        #{safedays,jdbcType=INTEGER},
      </if>
      <if test="thirdcategoryno != null" >
        #{thirdcategoryno,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="pos.model.JdgoodsExample" resultType="java.lang.Integer" >
    select count(*) from jdGoods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="pos.model.Jdgoods" >
    update jdGoods
    <set >
      <if test="goodsid != null" >
        GoodsID = #{goodsid,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        Code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        Name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="barcodes != null" >
        barcodes = #{barcodes,jdbcType=VARCHAR},
      </if>
      <if test="deptno != null" >
        deptNo = #{deptno,jdbcType=VARCHAR},
      </if>
      <if test="goodsname != null" >
        goodsName = #{goodsname,jdbcType=VARCHAR},
      </if>
      <if test="safedays != null" >
        safeDays = #{safedays,jdbcType=INTEGER},
      </if>
      <if test="thirdcategoryno != null" >
        thirdCategoryNo = #{thirdcategoryno,jdbcType=VARCHAR},
      </if>
    </set>
    where GoodsNo = #{goodsno,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="pos.model.Jdgoods" >
    update jdGoods
    set GoodsID = #{goodsid,jdbcType=VARCHAR},
      Code = #{code,jdbcType=VARCHAR},
      Name = #{name,jdbcType=VARCHAR},
      barcodes = #{barcodes,jdbcType=VARCHAR},
      deptNo = #{deptno,jdbcType=VARCHAR},
      goodsName = #{goodsname,jdbcType=VARCHAR},
      safeDays = #{safedays,jdbcType=INTEGER},
      thirdCategoryNo = #{thirdcategoryno,jdbcType=VARCHAR}
    where GoodsNo = #{goodsno,jdbcType=VARCHAR}
  </update>
</mapper>